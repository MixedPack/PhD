import numpy as npimport matplotlib.pyplot as pltfrom astropy.io import fitsimport csvimport pyfitsimport mathfrom numpy.polynomial.polynomial import polyfitfrom mpl_toolkits.axes_grid1 import make_axes_locatableimport pandas as pd#*************************SAMI Input values*********************************************Galaxies = pd.read_csv('../2_pipeline/0_Galaxies_Table/Galaxies_Table.csv')	FCC_index = Galaxies['FCC']M_r = Galaxies['M_r(mag)']mu_r = Galaxies['mu_r(mag/arcsec2)'] 	#surface brightness calculated with Re in arcsecR_eff = Galaxies['R_e(arcsec)']Kinematics = pd.read_csv('../2_pipeline/1_Kinematics_Table/Kinematics_Table.csv')Dispersion = Kinematics['Sigma']Disp_error = Kinematics['Error.Sigma']#*****************************Toloba et al. (2011)**********************************#Toloba et all (2011)Toloba = pd.read_csv('../0_data/Literature/Toloba11.csv')TDisper = Toloba['Dispersion']TR_eff = Toloba['R_e'] * 0.0727 #in kpcTmu_V_e = Toloba['mu_V_e']ColB_V = Toloba['E(B-V)']TM_V = Toloba['M_V']Colg_V = 0.630*ColB_V - 0.124Colg_r = (-1 * Colg_V + 0.016)/(-0.565)Colr_V = Colg_V - Colg_rTM_r = TM_V + Colr_VTmu_r_e = Tmu_V_e + Colr_V#****************Plotting Faber_Jackson relation****************************************cm = plt.cm.get_cmap('spring')x = M_ry = np.log10(Dispersion)y_err = (Disp_error)/(Dispersion*np.log(10))b, m = polyfit(x, y, 1)fitline = b + m * xTx = TM_rTy = np.log10(TDisper)fig = plt.figure(figsize = (20,7))ax = fig.add_subplot(1, 1, 1)plt.errorbar(x, y, yerr=y_err, fmt='.', ecolor='green')plt.scatter(x, y, s=R_eff*5, c=mu_r, cmap=cm)cbar = plt.colorbar()cbar.ax.invert_yaxis()cbar.set_label('$\mu_e$', rotation=-270)plt.scatter(Tx, Ty)plt.plot(x, fitline, c='grey')textstr = 'log($\sigma_{15}$) = ' + str("%.2f" % m) + ' $M_r$ ' + str("%.2f" % b)plt.title(textstr, y=1.05)major_ticks = np.arange(-14,-22,-1)ax.set_xticks(major_ticks)#for i in range(len(FCC_index)):#	plt.annotate(str(int(FCC_index[i])), (x[i], y[i]), fontsize=8)plt.ylabel('log($\sigma_{15}$) (km/s)', fontsize=10)plt.ylim(-0.5, 3.5)plt.xlabel('$M_r$ (mag)', fontsize=10)fig.savefig('../2_pipeline/3_FJ+Toloba/Faber_Jackson+Toloba.pdf')