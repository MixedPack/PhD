from scipy.optimize import minimizeimport numpy as npfrom astropy.io import fitsimport matplotlib.pyplot as pltfrom numpy.polynomial.polynomial import polyfitimport mathimport pandas as pd#*****************************Input values**********************************************Galaxies = pd.read_csv('../2_pipeline/0_Galaxies_Table/Galaxies_Table.csv')	FCC_index = Galaxies['FCC']log_mass = Galaxies['log10(M_*/M_sun)']mu_r = Galaxies['mu_r(mag/arcsec2)'] 	#surface brightness calculated with Re in arcsecR_eff = Galaxies['R_e(arcsec)'] * 0.092 			#in kpcKinematics = pd.read_csv('../2_pipeline/1_Kinematics_Table/Kinematics_Table.csv')Dispersion = Kinematics['Sigma']#*****************************Toloba et al. (2011)**********************************#Toloba et all (2011)Toloba = pd.read_csv('../0_data/Literature/Toloba11.csv')TDisper = Toloba['Dispersion']TR_eff = Toloba['R_e'] * 0.0727 #in kpcTmu_V_e = Toloba['mu_V_e']ColB_V = Toloba['E(B-V)']Tlog_mass = Toloba['log10(M_*/M_sun)']Colg_V = 0.630*ColB_V - 0.124Colg_r = (-1 * Colg_V + 0.016)/(-0.565)Colr_V = Colg_V - Colg_rTmu_r_e = Tmu_V_e + Colr_V#*****************************3d Data***********************************************fig =  plt.figure(figsize = (20,7))ax = fig.add_subplot(1,1,1)plt.scatter(log_mass, np.log10(Dispersion))plt.scatter(Tlog_mass, np.log10(TDisper))#for i in range(len(FCC_index)):#	ax.annotate(str(int(FCC_index[i])), (log_mass, Dispersion), fontsize=8)#plt.scatter(Tlog_mass, TDisp, 'x')plt.xlabel('$log10(M_*/M_{sun})$')plt.ylabel('log($\sigma$)')plt.text(7.5, 2.4, "blue dots : SAMI_Fornax")plt.text(7.5, 2.3, "orange dots: Toloba et al. (2011)")plt.savefig("../2_pipeline/3_Mstellar_Disp+Toloba/Mstellar_Disp+Toloba.pdf")